// Generated by CoffeeScript 1.4.0
(function() {
  var Easel, _ref;

  if ((_ref = window.tacit) == null) {
    window.tacit = {};
  }

  Easel = (function() {

    function Easel(project, toolbarLoc, padLoc, padHeight, padWidth, structure) {
      var padHtmlRect;
      this.project = project;
      padHtmlRect = d3.select(padLoc).node().getBoundingClientRect();
      if (padWidth == null) {
        padWidth = htmlRect.width;
      }
      if (padHeight == null) {
        padHeight = htmlRect.height;
      }
      this.pad = new tacit.Pad(this, padLoc, padHeight, padWidth, structure);
    }

    Easel.prototype.mouseDown = function(easel, eventType, mouseLoc, object) {
      console.log([easel, eventType, mouseLoc, object]);
      if (this.currentTool != null) {
        if (this.currentTool.mouseDown != null) {
          this.currentTool.mouseDown(easel, eventType, mouseLoc, object);
        }
      }
      return false;
    };

    Easel.prototype.mouseUp = function(easel, eventType, mouseLoc, object) {
      if (this.currentTool != null) {
        if (this.currentTool.mouseUp != null) {
          this.currentTool.mouseUp(easel, eventType, mouseLoc, object);
        }
      }
      return false;
    };

    Easel.prototype.mouseMove = function(easel, eventType, mouseLoc, object) {
      if (this.currentTool != null) {
        if (this.currentTool.mouseMove != null) {
          this.currentTool.mouseMove(easel, eventType, mouseLoc, object);
        }
      }
      return false;
    };

    Easel.prototype.keyDown = function(easel, eventType, keyCode) {
      var link, node, _i, _j, _len, _len1, _ref1, _ref2;
      if (this.currentTool != null) {
        if (this.currentTool.keyDown != null) {
          if (this.currentTool.keyDown(easel, eventType, keyCode)) {
            return false;
          }
        }
      }
      switch (d3.event.keyCode) {
        case 8:
        case 46:
          _ref1 = this.pad.sketch.selectedNodes;
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            node = _ref1[_i];
            node["delete"]();
          }
          _ref2 = this.pad.sketch.selectedLinks;
          for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
            link = _ref2[_j];
            link["delete"]();
          }
          this.pad.sketch.selectedLinks = this.pad.sketch.selectedNodes = [];
          this.pad.sketch.updateDrawing();
          break;
        case 68:
          easel.currentTool = tacit.tools.draw;
          $('.active').removeClass("active");
            	 $("#draw-btn").addClass("active");;

          break;
        case 83:
          easel.currentTool = tacit.tools.select;
          $('.active').removeClass("active");
            	 $("#select-btn").addClass("active");;

      }
      return false;
    };

    return Easel;

  })();

  window.tacit.Easel = Easel;

}).call(this);
