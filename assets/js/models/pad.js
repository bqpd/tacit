// Generated by CoffeeScript 1.9.2
(function() {
  var Pad;

  if (this.tacit == null) {
    this.tacit = {};
  }

  Pad = (function() {
    function Pad(easel, htmlLoc, height, width, structure) {
      var dim, i, j, k, l, len, len1, len2, len3, m, ref, ref1, ref2, ref3;
      this.easel = easel;
      this.htmlLoc = htmlLoc;
      this.height = height;
      this.width = width;
      if (structure == null) {
        structure = new tacit.Structure;
        new structure.Beam({
          x: 10,
          y: 0
        }, {
          x: 30,
          y: 40
        });
        new structure.Beam({
          x: 30,
          y: 40
        }, {
          x: 80,
          y: 0
        });
        new structure.Beam({
          x: 10,
          y: 0
        }, {
          x: -5,
          y: 110
        });
        new structure.Beam({
          x: -5,
          y: 110
        }, {
          x: 30,
          y: 40
        });
        new structure.Beam({
          x: 30,
          y: 40
        }, {
          x: 100,
          y: 40
        });
        new structure.Beam({
          x: 100,
          y: 40
        }, {
          x: 80,
          y: 0
        });
        new structure.Beam({
          x: 10,
          y: 0
        }, {
          x: 100,
          y: 40
        });
        ref = [0, 2];
        for (j = 0, len = ref.length; j < len; j++) {
          i = ref[j];
          structure.nodeList[i].fixed.y = true;
        }
        ref1 = [0];
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          i = ref1[k];
          structure.nodeList[i].fixed.x = true;
        }
        ref2 = ["y"];
        for (l = 0, len2 = ref2.length; l < len2; l++) {
          dim = ref2[l];
          ref3 = [1, 3, 4];
          for (m = 0, len3 = ref3.length; m < len3; m++) {
            i = ref3[m];
            structure.nodeList[i].force[dim] = -100;
          }
        }
      }
      this.sketch = new tacit.Sketch(this, this.htmlLoc, structure, this.height, this.width);
    }

    Pad.prototype.load = function(structure) {
      this.sketch.svg.remove();
      return this.sketch = new tacit.Sketch(this, this.htmlLoc, structure, this.height, this.width);
    };

    return Pad;

  })();

  this.tacit.Pad = Pad;

}).call(this);
