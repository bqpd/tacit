// Generated by CoffeeScript 1.9.2
(function() {
  var Pad;

  if (this.tacit == null) {
    this.tacit = {};
  }

  Pad = (function() {
    function Pad(easel, htmlLoc, height, width, structure) {
      var dim, gd, i, j, k, l, len, len1, len2, len3, m, ref, ref1, ref2, ref3;
      this.easel = easel;
      this.htmlLoc = htmlLoc;
      this.height = height;
      this.width = width;
      gd = 1.75;
      if (structure == null) {
        structure = new tacit.Structure;
        new structure.Beam({
          x: 20,
          y: gd
        }, {
          x: 70,
          y: 30
        });
        new structure.Beam({
          x: 70,
          y: 30
        }, {
          x: 80,
          y: gd
        });
        new structure.Beam({
          x: 80,
          y: gd
        }, {
          x: 40,
          y: 30
        });
        new structure.Beam({
          x: 40,
          y: 30
        }, {
          x: 20,
          y: gd
        });
        new structure.Beam({
          x: 40,
          y: 30
        }, {
          x: 70,
          y: 30
        });
        new structure.Beam({
          x: 20,
          y: gd
        }, {
          x: 25,
          y: 40
        });
        new structure.Beam({
          x: 25,
          y: 40
        }, {
          x: 0,
          y: 90
        });
        new structure.Beam({
          x: 0,
          y: 90
        }, {
          x: 20,
          y: gd
        });
        new structure.Beam({
          x: 25,
          y: 40
        }, {
          x: 40,
          y: 30
        });
        ref = [0, 2];
        for (j = 0, len = ref.length; j < len; j++) {
          i = ref[j];
          structure.nodeList[i].fixed.y = true;
        }
        ref1 = [0];
        for (k = 0, len1 = ref1.length; k < len1; k++) {
          i = ref1[k];
          structure.nodeList[i].fixed.x = true;
        }
        structure.nodeList[1].force.y = -75;
        structure.nodeList[3].force.y = -50;
        ref2 = "xy";
        for (l = 0, len2 = ref2.length; l < len2; l++) {
          dim = ref2[l];
          structure.nodeList[4].force[dim] = -30;
        }
        ref3 = "xy";
        for (m = 0, len3 = ref3.length; m < len3; m++) {
          dim = ref3[m];
          structure.nodeList[5].force[dim] = -15;
        }
      }
      this.sketch = new tacit.Sketch(this, this.htmlLoc, structure, this.height, this.width);
    }

    Pad.prototype.load = function(structure) {
      var scale, translate;
      this.sketch.svg.remove();
      translate = [this.sketch.translate[0] * this.sketch.scale, this.sketch.translate[1] * this.sketch.scale];
      scale = this.sketch.scale;
      return this.sketch = new tacit.Sketch(this, this.htmlLoc, structure, this.height, this.width);
    };

    return Pad;

  })();

  this.tacit.Pad = Pad;

}).call(this);
