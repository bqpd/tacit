// Generated by CoffeeScript 1.4.0
(function() {
  var moveTool, _base, _ref, _ref1;

  if ((_ref = window.tacit) == null) {
    window.tacit = {};
  }

  if ((_ref1 = (_base = window.tacit).tools) == null) {
    _base.tools = {};
  }

  moveTool = {
    allowPan: true,
    name: "move",
    mouseDown: function(easel, eventType, mouseLoc, object) {
      var idx;
      this.dragging = true;
      if (eventType === "node") {
        this.selection = object;
        this.allowPan = false;
        idx = easel.pad.sketch.selectedNodes.indexOf(object);
        if (idx === -1) {
          easel.pad.sketch.selectedNodes.push(object);
        }
        return easel.pad.sketch.quickDraw();
      }
    },
    mouseUp: function(easel, eventType, mouseLoc, object) {
      var idx;
      this.dragging = false;
      if (this.selection) {
        idx = easel.pad.sketch.selectedNodes.indexOf(this.selection);
        easel.pad.sketch.selectedNodes.splice(idx, 1);
        easel.pad.sketch.quickDraw();
        this.selection = null;
        return this.allowPan = true;
      }
    },
    mouseMove: function(easel, eventType, mouseLoc, object) {
      var change;
      if (this.dragging && this.selection) {
        this.selection.moveto({
          x: mouseLoc[0],
          y: mouseLoc[1]
        });
        return easel.pad.sketch.quickDraw();
      } else if (!this.dragging) {
        change = false;
        if (eventType === "node") {
          if (!1 + easel.pad.sketch.selectedNodes.indexOf(object)) {
            change = true;
            easel.pad.sketch.selectedNodes = [object];
          }
        } else if (easel.pad.sketch.selectedNodes.length > 0) {
          change = true;
          this.selection = null;
          easel.pad.sketch.selectedNodes = [];
        }
        if (change && object !== this.selection) {
          if (eventType === "node") {
            easel.project.onChange();
            this.selection = object;
          }
          return easel.pad.sketch.animateSelection();
        }
      }
    }
  };

  window.tacit.tools.move = moveTool;

}).call(this);
